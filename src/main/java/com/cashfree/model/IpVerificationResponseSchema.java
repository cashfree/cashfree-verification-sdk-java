/*
 * Cashfree Verification API's.
 * Cashfree's Verification APIs provide different types of verification to our merchants.
 *
 * The version of the OpenAPI document: 2023-12-18
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cashfree.JSON;

/**
 * Verify IP success response
 */
@Schema(description = "Verify IP success response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-11T13:08:13.353528Z[Etc/UTC]")
public class IpVerificationResponseSchema {
  public static final String SERIALIZED_NAME_REFERENCE_ID = "reference_id";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private Integer referenceId;

  public static final String SERIALIZED_NAME_VERIFICATION_ID = "verification_id";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_ID)
  private String verificationId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ip_address";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_PROXY_TYPE = "proxy_type";
  @SerializedName(SERIALIZED_NAME_PROXY_TYPE)
  private String proxyType;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_COUNTRY_NAME = "country_name";
  @SerializedName(SERIALIZED_NAME_COUNTRY_NAME)
  private String countryName;

  public static final String SERIALIZED_NAME_REGION_NAME = "region_name";
  @SerializedName(SERIALIZED_NAME_REGION_NAME)
  private String regionName;

  public static final String SERIALIZED_NAME_CITY_NAME = "city_name";
  @SerializedName(SERIALIZED_NAME_CITY_NAME)
  private String cityName;

  public static final String SERIALIZED_NAME_CITY_RISK_SCORE = "city_risk_score";
  @SerializedName(SERIALIZED_NAME_CITY_RISK_SCORE)
  private String cityRiskScore;

  public static final String SERIALIZED_NAME_PROXY_TYPE_RISK_SCORE = "proxy_type_risk_score";
  @SerializedName(SERIALIZED_NAME_PROXY_TYPE_RISK_SCORE)
  private String proxyTypeRiskScore;

  public IpVerificationResponseSchema() {
  }

  public IpVerificationResponseSchema referenceId(Integer referenceId) {
    
    this.referenceId = referenceId;
    return this;
  }

   /**
   * It displays the unique ID created by Cashfree Payments for reference purposes.
   * @return referenceId
  **/
  @javax.annotation.Nullable
  @Schema(example = "1358", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID created by Cashfree Payments for reference purposes.")
  public Integer getReferenceId() {
    return referenceId;
  }


  public void setReferenceId(Integer referenceId) {
    this.referenceId = referenceId;
  }


  public IpVerificationResponseSchema verificationId(String verificationId) {
    
    this.verificationId = verificationId;
    return this;
  }

   /**
   * It displays the unique ID you created to identify the verification request.
   * @return verificationId
  **/
  @javax.annotation.Nullable
  @Schema(example = "testverificationid", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID you created to identify the verification request.")
  public String getVerificationId() {
    return verificationId;
  }


  public void setVerificationId(String verificationId) {
    this.verificationId = verificationId;
  }


  public IpVerificationResponseSchema status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * It displays the status of the IP address.
   * @return status
  **/
  @javax.annotation.Nullable
  @Schema(example = "VALID", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the status of the IP address.")
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public IpVerificationResponseSchema ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * It displays the entered IP address.
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @Schema(example = "1.0.171.255", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the entered IP address.")
  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public IpVerificationResponseSchema proxyType(String proxyType) {
    
    this.proxyType = proxyType;
    return this;
  }

   /**
   * It displays the category or classification of a proxy server based on its functionality and how it handles network requests.
   * @return proxyType
  **/
  @javax.annotation.Nullable
  @Schema(example = "VPA", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the category or classification of a proxy server based on its functionality and how it handles network requests.")
  public String getProxyType() {
    return proxyType;
  }


  public void setProxyType(String proxyType) {
    this.proxyType = proxyType;
  }


  public IpVerificationResponseSchema countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * It displays the country code associated with the geographical location of the device or network to which the IP address is assigned.
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @Schema(example = "TH", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the country code associated with the geographical location of the device or network to which the IP address is assigned.")
  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public IpVerificationResponseSchema countryName(String countryName) {
    
    this.countryName = countryName;
    return this;
  }

   /**
   * It displays the name of the country associated with the geographical location of the device or network to which the IP address is assigned.
   * @return countryName
  **/
  @javax.annotation.Nullable
  @Schema(example = "Thailand", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the country associated with the geographical location of the device or network to which the IP address is assigned.")
  public String getCountryName() {
    return countryName;
  }


  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }


  public IpVerificationResponseSchema regionName(String regionName) {
    
    this.regionName = regionName;
    return this;
  }

   /**
   * It displays the name of the region associated with the geographical location of the device or network to which the IP address is assigned.
   * @return regionName
  **/
  @javax.annotation.Nullable
  @Schema(example = "Phangnga", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the region associated with the geographical location of the device or network to which the IP address is assigned.")
  public String getRegionName() {
    return regionName;
  }


  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }


  public IpVerificationResponseSchema cityName(String cityName) {
    
    this.cityName = cityName;
    return this;
  }

   /**
   * It displays the name of the city associated with the geographical location of the device or network to which the IP address is assigned.
   * @return cityName
  **/
  @javax.annotation.Nullable
  @Schema(example = "Phang Nga", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the city associated with the geographical location of the device or network to which the IP address is assigned.")
  public String getCityName() {
    return cityName;
  }


  public void setCityName(String cityName) {
    this.cityName = cityName;
  }


  public IpVerificationResponseSchema cityRiskScore(String cityRiskScore) {
    
    this.cityRiskScore = cityRiskScore;
    return this;
  }

   /**
   * It displays the risk score associated with a particular city based on factors such as cybersecurity threats, crime rates, or other relevant data.
   * @return cityRiskScore
  **/
  @javax.annotation.Nullable
  @Schema(example = "0", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the risk score associated with a particular city based on factors such as cybersecurity threats, crime rates, or other relevant data.")
  public String getCityRiskScore() {
    return cityRiskScore;
  }


  public void setCityRiskScore(String cityRiskScore) {
    this.cityRiskScore = cityRiskScore;
  }


  public IpVerificationResponseSchema proxyTypeRiskScore(String proxyTypeRiskScore) {
    
    this.proxyTypeRiskScore = proxyTypeRiskScore;
    return this;
  }

   /**
   * It displays the risk score associated with a particular city based on factors such as cybersecurity threats, crime rates, or other relevant data.
   * @return proxyTypeRiskScore
  **/
  @javax.annotation.Nullable
  @Schema(example = "0", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the risk score associated with a particular city based on factors such as cybersecurity threats, crime rates, or other relevant data.")
  public String getProxyTypeRiskScore() {
    return proxyTypeRiskScore;
  }


  public void setProxyTypeRiskScore(String proxyTypeRiskScore) {
    this.proxyTypeRiskScore = proxyTypeRiskScore;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpVerificationResponseSchema ipVerificationResponseSchema = (IpVerificationResponseSchema) o;
    return Objects.equals(this.referenceId, ipVerificationResponseSchema.referenceId) &&
        Objects.equals(this.verificationId, ipVerificationResponseSchema.verificationId) &&
        Objects.equals(this.status, ipVerificationResponseSchema.status) &&
        Objects.equals(this.ipAddress, ipVerificationResponseSchema.ipAddress) &&
        Objects.equals(this.proxyType, ipVerificationResponseSchema.proxyType) &&
        Objects.equals(this.countryCode, ipVerificationResponseSchema.countryCode) &&
        Objects.equals(this.countryName, ipVerificationResponseSchema.countryName) &&
        Objects.equals(this.regionName, ipVerificationResponseSchema.regionName) &&
        Objects.equals(this.cityName, ipVerificationResponseSchema.cityName) &&
        Objects.equals(this.cityRiskScore, ipVerificationResponseSchema.cityRiskScore) &&
        Objects.equals(this.proxyTypeRiskScore, ipVerificationResponseSchema.proxyTypeRiskScore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceId, verificationId, status, ipAddress, proxyType, countryCode, countryName, regionName, cityName, cityRiskScore, proxyTypeRiskScore);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpVerificationResponseSchema {\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    verificationId: ").append(toIndentedString(verificationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    proxyType: ").append(toIndentedString(proxyType)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    regionName: ").append(toIndentedString(regionName)).append("\n");
    sb.append("    cityName: ").append(toIndentedString(cityName)).append("\n");
    sb.append("    cityRiskScore: ").append(toIndentedString(cityRiskScore)).append("\n");
    sb.append("    proxyTypeRiskScore: ").append(toIndentedString(proxyTypeRiskScore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("reference_id");
    openapiFields.add("verification_id");
    openapiFields.add("status");
    openapiFields.add("ip_address");
    openapiFields.add("proxy_type");
    openapiFields.add("country_code");
    openapiFields.add("country_name");
    openapiFields.add("region_name");
    openapiFields.add("city_name");
    openapiFields.add("city_risk_score");
    openapiFields.add("proxy_type_risk_score");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to IpVerificationResponseSchema
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("verification_id") != null && !jsonObj.get("verification_id").isJsonNull()) && !jsonObj.get("verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verification_id").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("ip_address") != null && !jsonObj.get("ip_address").isJsonNull()) && !jsonObj.get("ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_address").toString()));
      }
      if ((jsonObj.get("proxy_type") != null && !jsonObj.get("proxy_type").isJsonNull()) && !jsonObj.get("proxy_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxy_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxy_type").toString()));
      }
      if ((jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonNull()) && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if ((jsonObj.get("country_name") != null && !jsonObj.get("country_name").isJsonNull()) && !jsonObj.get("country_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_name").toString()));
      }
      if ((jsonObj.get("region_name") != null && !jsonObj.get("region_name").isJsonNull()) && !jsonObj.get("region_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region_name").toString()));
      }
      if ((jsonObj.get("city_name") != null && !jsonObj.get("city_name").isJsonNull()) && !jsonObj.get("city_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city_name").toString()));
      }
      if ((jsonObj.get("city_risk_score") != null && !jsonObj.get("city_risk_score").isJsonNull()) && !jsonObj.get("city_risk_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city_risk_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city_risk_score").toString()));
      }
      if ((jsonObj.get("proxy_type_risk_score") != null && !jsonObj.get("proxy_type_risk_score").isJsonNull()) && !jsonObj.get("proxy_type_risk_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxy_type_risk_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxy_type_risk_score").toString()));
      }
  }


  /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to IpVerificationResponseSchema
  */
  public static boolean validateJsonElementForOneOf(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("verification_id") != null && !jsonObj.get("verification_id").isJsonNull()) && !jsonObj.get("verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verification_id").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("ip_address") != null && !jsonObj.get("ip_address").isJsonNull()) && !jsonObj.get("ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_address").toString()));
      }
      if ((jsonObj.get("proxy_type") != null && !jsonObj.get("proxy_type").isJsonNull()) && !jsonObj.get("proxy_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxy_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxy_type").toString()));
      }
      if ((jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonNull()) && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if ((jsonObj.get("country_name") != null && !jsonObj.get("country_name").isJsonNull()) && !jsonObj.get("country_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_name").toString()));
      }
      if ((jsonObj.get("region_name") != null && !jsonObj.get("region_name").isJsonNull()) && !jsonObj.get("region_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region_name").toString()));
      }
      if ((jsonObj.get("city_name") != null && !jsonObj.get("city_name").isJsonNull()) && !jsonObj.get("city_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city_name").toString()));
      }
      if ((jsonObj.get("city_risk_score") != null && !jsonObj.get("city_risk_score").isJsonNull()) && !jsonObj.get("city_risk_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city_risk_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city_risk_score").toString()));
      }
      if ((jsonObj.get("proxy_type_risk_score") != null && !jsonObj.get("proxy_type_risk_score").isJsonNull()) && !jsonObj.get("proxy_type_risk_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxy_type_risk_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxy_type_risk_score").toString()));
      }
      return false;
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IpVerificationResponseSchema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IpVerificationResponseSchema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IpVerificationResponseSchema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IpVerificationResponseSchema.class));

       return (TypeAdapter<T>) new TypeAdapter<IpVerificationResponseSchema>() {
           @Override
           public void write(JsonWriter out, IpVerificationResponseSchema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IpVerificationResponseSchema read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of IpVerificationResponseSchema given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of IpVerificationResponseSchema
  * @throws IOException if the JSON string is invalid with respect to IpVerificationResponseSchema
  */
  public static IpVerificationResponseSchema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IpVerificationResponseSchema.class);
  }

 /**
  * Convert an instance of IpVerificationResponseSchema to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


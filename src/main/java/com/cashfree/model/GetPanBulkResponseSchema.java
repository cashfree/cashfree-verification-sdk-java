/*
 * Cashfree Verification API's.
 * Cashfree's Verification APIs provide different types of verification to our merchants.
 *
 * The version of the OpenAPI document: 2023-12-18
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.model;

import java.util.Objects;
import com.cashfree.model.GetVerifyPanResponseSchema;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cashfree.JSON;

/**
 * Response for Verify Bulk PAN API
 */
@Schema(description = "Response for Verify Bulk PAN API")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-08T05:03:36.102379Z[Etc/UTC]")
public class GetPanBulkResponseSchema {
  public static final String SERIALIZED_NAME_BULK_VERIFICATION_ID = "bulk_verification_id";
  @SerializedName(SERIALIZED_NAME_BULK_VERIFICATION_ID)
  private String bulkVerificationId;

  public static final String SERIALIZED_NAME_REFERENCE_ID = "reference_id";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private String referenceId;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Long count;

  public static final String SERIALIZED_NAME_ENTRIES = "entries";
  @SerializedName(SERIALIZED_NAME_ENTRIES)
  private List<GetVerifyPanResponseSchema> entries;

  public GetPanBulkResponseSchema() {
  }

  public GetPanBulkResponseSchema bulkVerificationId(String bulkVerificationId) {
    
    this.bulkVerificationId = bulkVerificationId;
    return this;
  }

   /**
   * It displays the unique ID created by you to identify the bulk verification request.
   * @return bulkVerificationId
  **/
  @javax.annotation.Nullable
  @Schema(example = "1123456", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID created by you to identify the bulk verification request.")
  public String getBulkVerificationId() {
    return bulkVerificationId;
  }


  public void setBulkVerificationId(String bulkVerificationId) {
    this.bulkVerificationId = bulkVerificationId;
  }


  public GetPanBulkResponseSchema referenceId(String referenceId) {
    
    this.referenceId = referenceId;
    return this;
  }

   /**
   * It displays the unique ID created by Cashfree Payments for reference purposes.
   * @return referenceId
  **/
  @javax.annotation.Nullable
  @Schema(example = "515", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID created by Cashfree Payments for reference purposes.")
  public String getReferenceId() {
    return referenceId;
  }


  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }


  public GetPanBulkResponseSchema count(Long count) {
    
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @javax.annotation.Nullable
  @Schema(example = "1", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public Long getCount() {
    return count;
  }


  public void setCount(Long count) {
    this.count = count;
  }


  public GetPanBulkResponseSchema entries(List<GetVerifyPanResponseSchema> entries) {
    
    this.entries = entries;
    return this;
  }

  public GetPanBulkResponseSchema addEntriesItem(GetVerifyPanResponseSchema entriesItem) {
    if (this.entries == null) {
      this.entries = new ArrayList<>();
    }
    this.entries.add(entriesItem);
    return this;
  }

   /**
   * It contains the details of PAN for verification.
   * @return entries
  **/
  @javax.annotation.Nullable
  @Schema(example = "{\"father_name\":\"John Doe\",\"message\":\"VALID\",\"name_match_result\":\"PARTIAL\",\"name_match_score\":\"0.7\",\"name_provided\":\"John De\",\"pan\":\"ABCDP3011E\",\"reference_id\":1234567,\"registered_name\":\"John Doe\",\"status_code\":\"VALID\",\"type\":\"Individual\",\"valid\":true}", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It contains the details of PAN for verification.")
  public List<GetVerifyPanResponseSchema> getEntries() {
    return entries;
  }


  public void setEntries(List<GetVerifyPanResponseSchema> entries) {
    this.entries = entries;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPanBulkResponseSchema getPanBulkResponseSchema = (GetPanBulkResponseSchema) o;
    return Objects.equals(this.bulkVerificationId, getPanBulkResponseSchema.bulkVerificationId) &&
        Objects.equals(this.referenceId, getPanBulkResponseSchema.referenceId) &&
        Objects.equals(this.count, getPanBulkResponseSchema.count) &&
        Objects.equals(this.entries, getPanBulkResponseSchema.entries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulkVerificationId, referenceId, count, entries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPanBulkResponseSchema {\n");
    sb.append("    bulkVerificationId: ").append(toIndentedString(bulkVerificationId)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bulk_verification_id");
    openapiFields.add("reference_id");
    openapiFields.add("count");
    openapiFields.add("entries");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetPanBulkResponseSchema
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bulk_verification_id") != null && !jsonObj.get("bulk_verification_id").isJsonNull()) && !jsonObj.get("bulk_verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bulk_verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bulk_verification_id").toString()));
      }
      if ((jsonObj.get("reference_id") != null && !jsonObj.get("reference_id").isJsonNull()) && !jsonObj.get("reference_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference_id").toString()));
      }
      if (jsonObj.get("entries") != null && !jsonObj.get("entries").isJsonNull()) {
        JsonArray jsonArrayentries = jsonObj.getAsJsonArray("entries");
        if (jsonArrayentries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("entries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `entries` to be an array in the JSON string but got `%s`", jsonObj.get("entries").toString()));
          }

          // validate the optional field `entries` (array)
          for (int i = 0; i < jsonArrayentries.size(); i++) {
            GetVerifyPanResponseSchema.validateJsonElement(jsonArrayentries.get(i));
          };
        }
      }
  }


  /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetPanBulkResponseSchema
  */
  public static boolean validateJsonElementForOneOf(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bulk_verification_id") != null && !jsonObj.get("bulk_verification_id").isJsonNull()) && !jsonObj.get("bulk_verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bulk_verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bulk_verification_id").toString()));
      }
      if ((jsonObj.get("reference_id") != null && !jsonObj.get("reference_id").isJsonNull()) && !jsonObj.get("reference_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference_id").toString()));
      }
      if (jsonObj.get("entries") != null && !jsonObj.get("entries").isJsonNull()) {
        JsonArray jsonArrayentries = jsonObj.getAsJsonArray("entries");
        if (jsonArrayentries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("entries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `entries` to be an array in the JSON string but got `%s`", jsonObj.get("entries").toString()));
          }

          // validate the optional field `entries` (array)
          for (int i = 0; i < jsonArrayentries.size(); i++) {
            GetVerifyPanResponseSchema.validateJsonElement(jsonArrayentries.get(i));
          };
        }
      }
      return false;
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetPanBulkResponseSchema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetPanBulkResponseSchema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetPanBulkResponseSchema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetPanBulkResponseSchema.class));

       return (TypeAdapter<T>) new TypeAdapter<GetPanBulkResponseSchema>() {
           @Override
           public void write(JsonWriter out, GetPanBulkResponseSchema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetPanBulkResponseSchema read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetPanBulkResponseSchema given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetPanBulkResponseSchema
  * @throws IOException if the JSON string is invalid with respect to GetPanBulkResponseSchema
  */
  public static GetPanBulkResponseSchema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetPanBulkResponseSchema.class);
  }

 /**
  * Convert an instance of GetPanBulkResponseSchema to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


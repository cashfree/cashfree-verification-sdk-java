/*
 * Cashfree Verification API's.
 * Cashfree's Verification APIs provide different types of verification to our merchants.
 *
 * The version of the OpenAPI document: 2023-12-18
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.model;

import java.util.Objects;
import com.cashfree.model.SplitAddressSchema;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cashfree.JSON;

/**
 * Verify Voter ID success response
 */
@Schema(description = "Verify Voter ID success response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-08T05:03:36.102379Z[Etc/UTC]")
public class VoterIdResponseSchema {
  public static final String SERIALIZED_NAME_REFERENCE_ID = "reference_id";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private Integer referenceId;

  public static final String SERIALIZED_NAME_VERIFICATION_ID = "verification_id";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_ID)
  private String verificationId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAME_IN_REGIONAL_LANG = "name_in_regional_lang";
  @SerializedName(SERIALIZED_NAME_NAME_IN_REGIONAL_LANG)
  private String nameInRegionalLang;

  public static final String SERIALIZED_NAME_AGE = "age";
  @SerializedName(SERIALIZED_NAME_AGE)
  private String age;

  public static final String SERIALIZED_NAME_RELATION_TYPE = "relation_type";
  @SerializedName(SERIALIZED_NAME_RELATION_TYPE)
  private String relationType;

  public static final String SERIALIZED_NAME_RELATION_NAME = "relation_name";
  @SerializedName(SERIALIZED_NAME_RELATION_NAME)
  private String relationName;

  public static final String SERIALIZED_NAME_RELATION_NAME_IN_REGIONAL_LANG = "relation_name_in_regional_lang";
  @SerializedName(SERIALIZED_NAME_RELATION_NAME_IN_REGIONAL_LANG)
  private String relationNameInRegionalLang;

  public static final String SERIALIZED_NAME_FATHER_NAME = "father_name";
  @SerializedName(SERIALIZED_NAME_FATHER_NAME)
  private String fatherName;

  public static final String SERIALIZED_NAME_DOB = "dob";
  @SerializedName(SERIALIZED_NAME_DOB)
  private String dob;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_SPLIT_ADDRESS = "split_address";
  @SerializedName(SERIALIZED_NAME_SPLIT_ADDRESS)
  private SplitAddressSchema splitAddress;

  public static final String SERIALIZED_NAME_EPIC_NUMBER = "epic_number";
  @SerializedName(SERIALIZED_NAME_EPIC_NUMBER)
  private String epicNumber;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_ASSEMBLY_CONSTITUENCY_NUMBER = "assembly_constituency_number";
  @SerializedName(SERIALIZED_NAME_ASSEMBLY_CONSTITUENCY_NUMBER)
  private String assemblyConstituencyNumber;

  public static final String SERIALIZED_NAME_ASSEMBLY_CONSTITUENCY = "assembly_constituency";
  @SerializedName(SERIALIZED_NAME_ASSEMBLY_CONSTITUENCY)
  private String assemblyConstituency;

  public static final String SERIALIZED_NAME_PARLIAMENTARY_CONSTITUENCY_NUMBER = "parliamentary_constituency_number";
  @SerializedName(SERIALIZED_NAME_PARLIAMENTARY_CONSTITUENCY_NUMBER)
  private String parliamentaryConstituencyNumber;

  public static final String SERIALIZED_NAME_PARLIAMENTARY_CONSTITUENCY = "parliamentary_constituency";
  @SerializedName(SERIALIZED_NAME_PARLIAMENTARY_CONSTITUENCY)
  private String parliamentaryConstituency;

  public static final String SERIALIZED_NAME_PART_NUMBER = "part_number";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_PART_NAME = "part_name";
  @SerializedName(SERIALIZED_NAME_PART_NAME)
  private String partName;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "serial_number";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private String serialNumber;

  public static final String SERIALIZED_NAME_POLLING_STATION = "polling_station";
  @SerializedName(SERIALIZED_NAME_POLLING_STATION)
  private String pollingStation;

  public VoterIdResponseSchema() {
  }

  public VoterIdResponseSchema referenceId(Integer referenceId) {
    
    this.referenceId = referenceId;
    return this;
  }

   /**
   * It displays the unique ID created by Cashfree Payments for reference purposes.
   * @return referenceId
  **/
  @javax.annotation.Nullable
  @Schema(example = "1358", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID created by Cashfree Payments for reference purposes.")
  public Integer getReferenceId() {
    return referenceId;
  }


  public void setReferenceId(Integer referenceId) {
    this.referenceId = referenceId;
  }


  public VoterIdResponseSchema verificationId(String verificationId) {
    
    this.verificationId = verificationId;
    return this;
  }

   /**
   * It displays the unique ID you created to identify the verification request.
   * @return verificationId
  **/
  @javax.annotation.Nullable
  @Schema(example = "testverificationid", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID you created to identify the verification request.")
  public String getVerificationId() {
    return verificationId;
  }


  public void setVerificationId(String verificationId) {
    this.verificationId = verificationId;
  }


  public VoterIdResponseSchema status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * It displays the status of the API request.
   * @return status
  **/
  @javax.annotation.Nullable
  @Schema(example = "VALID", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the status of the API request.")
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public VoterIdResponseSchema name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * It displays the name of the individual as present in the voter ID card.
   * @return name
  **/
  @javax.annotation.Nullable
  @Schema(example = "SUSHMITHA H", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the individual as present in the voter ID card.")
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public VoterIdResponseSchema nameInRegionalLang(String nameInRegionalLang) {
    
    this.nameInRegionalLang = nameInRegionalLang;
    return this;
  }

   /**
   * It displays the name of the individual in the individual’s regional language as present in the voter ID card.
   * @return nameInRegionalLang
  **/
  @javax.annotation.Nullable
  @Schema(example = "ಸುಶ್ಮಿತ ಹೆಚ್", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the individual in the individual’s regional language as present in the voter ID card.")
  public String getNameInRegionalLang() {
    return nameInRegionalLang;
  }


  public void setNameInRegionalLang(String nameInRegionalLang) {
    this.nameInRegionalLang = nameInRegionalLang;
  }


  public VoterIdResponseSchema age(String age) {
    
    this.age = age;
    return this;
  }

   /**
   * It displays the age of the voter ID holder as present in the voter ID card
   * @return age
  **/
  @javax.annotation.Nullable
  @Schema(example = "25", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the age of the voter ID holder as present in the voter ID card")
  public String getAge() {
    return age;
  }


  public void setAge(String age) {
    this.age = age;
  }


  public VoterIdResponseSchema relationType(String relationType) {
    
    this.relationType = relationType;
    return this;
  }

   /**
   * It displays the type of the relationship with the parent/guardian as present in the voter ID card.
   * @return relationType
  **/
  @javax.annotation.Nullable
  @Schema(example = "FTHR", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the type of the relationship with the parent/guardian as present in the voter ID card.")
  public String getRelationType() {
    return relationType;
  }


  public void setRelationType(String relationType) {
    this.relationType = relationType;
  }


  public VoterIdResponseSchema relationName(String relationName) {
    
    this.relationName = relationName;
    return this;
  }

   /**
   * It displays the name of the parent/guardian as present in the voter ID card.
   * @return relationName
  **/
  @javax.annotation.Nullable
  @Schema(example = "SUNILAKUMAR", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the parent/guardian as present in the voter ID card.")
  public String getRelationName() {
    return relationName;
  }


  public void setRelationName(String relationName) {
    this.relationName = relationName;
  }


  public VoterIdResponseSchema relationNameInRegionalLang(String relationNameInRegionalLang) {
    
    this.relationNameInRegionalLang = relationNameInRegionalLang;
    return this;
  }

   /**
   * It displays the name of the parent/guardian in the individual’s regional language as present in the voter ID card.
   * @return relationNameInRegionalLang
  **/
  @javax.annotation.Nullable
  @Schema(example = "ಸುನಿಲಕುಮಾರ", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the parent/guardian in the individual’s regional language as present in the voter ID card.")
  public String getRelationNameInRegionalLang() {
    return relationNameInRegionalLang;
  }


  public void setRelationNameInRegionalLang(String relationNameInRegionalLang) {
    this.relationNameInRegionalLang = relationNameInRegionalLang;
  }


  public VoterIdResponseSchema fatherName(String fatherName) {
    
    this.fatherName = fatherName;
    return this;
  }

   /**
   * It displays the father’s name of the individual as present in the voter ID card.
   * @return fatherName
  **/
  @javax.annotation.Nullable
  @Schema(example = "SUNILAKUMAR", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the father’s name of the individual as present in the voter ID card.")
  public String getFatherName() {
    return fatherName;
  }


  public void setFatherName(String fatherName) {
    this.fatherName = fatherName;
  }


  public VoterIdResponseSchema dob(String dob) {
    
    this.dob = dob;
    return this;
  }

   /**
   * It displays the date of birth of the individual as present in the voter ID card.
   * @return dob
  **/
  @javax.annotation.Nullable
  @Schema(example = "", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the date of birth of the individual as present in the voter ID card.")
  public String getDob() {
    return dob;
  }


  public void setDob(String dob) {
    this.dob = dob;
  }


  public VoterIdResponseSchema gender(String gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * It displays the gender of the individual as present in the voter ID card.
   * @return gender
  **/
  @javax.annotation.Nullable
  @Schema(example = "Female", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the gender of the individual as present in the voter ID card.")
  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    this.gender = gender;
  }


  public VoterIdResponseSchema address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * It displays the address information of the individual as present in the voter ID card.
   * @return address
  **/
  @javax.annotation.Nullable
  @Schema(example = "GOVT JUNIOR COLLEGE SIRWAR", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the address information of the individual as present in the voter ID card.")
  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public VoterIdResponseSchema splitAddress(SplitAddressSchema splitAddress) {
    
    this.splitAddress = splitAddress;
    return this;
  }

   /**
   * Get splitAddress
   * @return splitAddress
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public SplitAddressSchema getSplitAddress() {
    return splitAddress;
  }


  public void setSplitAddress(SplitAddressSchema splitAddress) {
    this.splitAddress = splitAddress;
  }


  public VoterIdResponseSchema epicNumber(String epicNumber) {
    
    this.epicNumber = epicNumber;
    return this;
  }

   /**
   * It displays the EPIC number of the individual as present in the voter ID card.
   * @return epicNumber
  **/
  @javax.annotation.Nullable
  @Schema(example = "XXX0000000", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the EPIC number of the individual as present in the voter ID card.")
  public String getEpicNumber() {
    return epicNumber;
  }


  public void setEpicNumber(String epicNumber) {
    this.epicNumber = epicNumber;
  }


  public VoterIdResponseSchema state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * It displays the name of the state as present in the voter ID card.
   * @return state
  **/
  @javax.annotation.Nullable
  @Schema(example = "Karnataka", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the state as present in the voter ID card.")
  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public VoterIdResponseSchema assemblyConstituencyNumber(String assemblyConstituencyNumber) {
    
    this.assemblyConstituencyNumber = assemblyConstituencyNumber;
    return this;
  }

   /**
   * It displays the number associated with the assembly constituency as present in the voter ID card.
   * @return assemblyConstituencyNumber
  **/
  @javax.annotation.Nullable
  @Schema(example = "55", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the number associated with the assembly constituency as present in the voter ID card.")
  public String getAssemblyConstituencyNumber() {
    return assemblyConstituencyNumber;
  }


  public void setAssemblyConstituencyNumber(String assemblyConstituencyNumber) {
    this.assemblyConstituencyNumber = assemblyConstituencyNumber;
  }


  public VoterIdResponseSchema assemblyConstituency(String assemblyConstituency) {
    
    this.assemblyConstituency = assemblyConstituency;
    return this;
  }

   /**
   * It displays the name of the assembly constituency as present in the voter ID card.
   * @return assemblyConstituency
  **/
  @javax.annotation.Nullable
  @Schema(example = "MANVI", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the assembly constituency as present in the voter ID card.")
  public String getAssemblyConstituency() {
    return assemblyConstituency;
  }


  public void setAssemblyConstituency(String assemblyConstituency) {
    this.assemblyConstituency = assemblyConstituency;
  }


  public VoterIdResponseSchema parliamentaryConstituencyNumber(String parliamentaryConstituencyNumber) {
    
    this.parliamentaryConstituencyNumber = parliamentaryConstituencyNumber;
    return this;
  }

   /**
   * It displays the number associated with the parliamentary constituency as present in the voter ID card.
   * @return parliamentaryConstituencyNumber
  **/
  @javax.annotation.Nullable
  @Schema(example = "6", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the number associated with the parliamentary constituency as present in the voter ID card.")
  public String getParliamentaryConstituencyNumber() {
    return parliamentaryConstituencyNumber;
  }


  public void setParliamentaryConstituencyNumber(String parliamentaryConstituencyNumber) {
    this.parliamentaryConstituencyNumber = parliamentaryConstituencyNumber;
  }


  public VoterIdResponseSchema parliamentaryConstituency(String parliamentaryConstituency) {
    
    this.parliamentaryConstituency = parliamentaryConstituency;
    return this;
  }

   /**
   * It displays the name of the parliamentary constituency as present in the voter ID card.
   * @return parliamentaryConstituency
  **/
  @javax.annotation.Nullable
  @Schema(example = "Raichur", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the parliamentary constituency as present in the voter ID card.")
  public String getParliamentaryConstituency() {
    return parliamentaryConstituency;
  }


  public void setParliamentaryConstituency(String parliamentaryConstituency) {
    this.parliamentaryConstituency = parliamentaryConstituency;
  }


  public VoterIdResponseSchema partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * It displays the part number in the electoral roll.
   * @return partNumber
  **/
  @javax.annotation.Nullable
  @Schema(example = "29", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the part number in the electoral roll.")
  public String getPartNumber() {
    return partNumber;
  }


  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public VoterIdResponseSchema partName(String partName) {
    
    this.partName = partName;
    return this;
  }

   /**
   * It displays the part name in the electoral roll.
   * @return partName
  **/
  @javax.annotation.Nullable
  @Schema(example = "GOVERMENT JUNIOR COLLEGE 2nd Room (South Wing ) sirwar", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the part name in the electoral roll.")
  public String getPartName() {
    return partName;
  }


  public void setPartName(String partName) {
    this.partName = partName;
  }


  public VoterIdResponseSchema serialNumber(String serialNumber) {
    
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * It displays the serial number as present in the voter ID card.
   * @return serialNumber
  **/
  @javax.annotation.Nullable
  @Schema(example = "892", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the serial number as present in the voter ID card.")
  public String getSerialNumber() {
    return serialNumber;
  }


  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }


  public VoterIdResponseSchema pollingStation(String pollingStation) {
    
    this.pollingStation = pollingStation;
    return this;
  }

   /**
   * It displays the place where the individual cast votes during elections.
   * @return pollingStation
  **/
  @javax.annotation.Nullable
  @Schema(example = "GOVT JUNIOR COLLEGE SIRWAR", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the place where the individual cast votes during elections.")
  public String getPollingStation() {
    return pollingStation;
  }


  public void setPollingStation(String pollingStation) {
    this.pollingStation = pollingStation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoterIdResponseSchema voterIdResponseSchema = (VoterIdResponseSchema) o;
    return Objects.equals(this.referenceId, voterIdResponseSchema.referenceId) &&
        Objects.equals(this.verificationId, voterIdResponseSchema.verificationId) &&
        Objects.equals(this.status, voterIdResponseSchema.status) &&
        Objects.equals(this.name, voterIdResponseSchema.name) &&
        Objects.equals(this.nameInRegionalLang, voterIdResponseSchema.nameInRegionalLang) &&
        Objects.equals(this.age, voterIdResponseSchema.age) &&
        Objects.equals(this.relationType, voterIdResponseSchema.relationType) &&
        Objects.equals(this.relationName, voterIdResponseSchema.relationName) &&
        Objects.equals(this.relationNameInRegionalLang, voterIdResponseSchema.relationNameInRegionalLang) &&
        Objects.equals(this.fatherName, voterIdResponseSchema.fatherName) &&
        Objects.equals(this.dob, voterIdResponseSchema.dob) &&
        Objects.equals(this.gender, voterIdResponseSchema.gender) &&
        Objects.equals(this.address, voterIdResponseSchema.address) &&
        Objects.equals(this.splitAddress, voterIdResponseSchema.splitAddress) &&
        Objects.equals(this.epicNumber, voterIdResponseSchema.epicNumber) &&
        Objects.equals(this.state, voterIdResponseSchema.state) &&
        Objects.equals(this.assemblyConstituencyNumber, voterIdResponseSchema.assemblyConstituencyNumber) &&
        Objects.equals(this.assemblyConstituency, voterIdResponseSchema.assemblyConstituency) &&
        Objects.equals(this.parliamentaryConstituencyNumber, voterIdResponseSchema.parliamentaryConstituencyNumber) &&
        Objects.equals(this.parliamentaryConstituency, voterIdResponseSchema.parliamentaryConstituency) &&
        Objects.equals(this.partNumber, voterIdResponseSchema.partNumber) &&
        Objects.equals(this.partName, voterIdResponseSchema.partName) &&
        Objects.equals(this.serialNumber, voterIdResponseSchema.serialNumber) &&
        Objects.equals(this.pollingStation, voterIdResponseSchema.pollingStation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceId, verificationId, status, name, nameInRegionalLang, age, relationType, relationName, relationNameInRegionalLang, fatherName, dob, gender, address, splitAddress, epicNumber, state, assemblyConstituencyNumber, assemblyConstituency, parliamentaryConstituencyNumber, parliamentaryConstituency, partNumber, partName, serialNumber, pollingStation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoterIdResponseSchema {\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    verificationId: ").append(toIndentedString(verificationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameInRegionalLang: ").append(toIndentedString(nameInRegionalLang)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    relationType: ").append(toIndentedString(relationType)).append("\n");
    sb.append("    relationName: ").append(toIndentedString(relationName)).append("\n");
    sb.append("    relationNameInRegionalLang: ").append(toIndentedString(relationNameInRegionalLang)).append("\n");
    sb.append("    fatherName: ").append(toIndentedString(fatherName)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    splitAddress: ").append(toIndentedString(splitAddress)).append("\n");
    sb.append("    epicNumber: ").append(toIndentedString(epicNumber)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    assemblyConstituencyNumber: ").append(toIndentedString(assemblyConstituencyNumber)).append("\n");
    sb.append("    assemblyConstituency: ").append(toIndentedString(assemblyConstituency)).append("\n");
    sb.append("    parliamentaryConstituencyNumber: ").append(toIndentedString(parliamentaryConstituencyNumber)).append("\n");
    sb.append("    parliamentaryConstituency: ").append(toIndentedString(parliamentaryConstituency)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    partName: ").append(toIndentedString(partName)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    pollingStation: ").append(toIndentedString(pollingStation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("reference_id");
    openapiFields.add("verification_id");
    openapiFields.add("status");
    openapiFields.add("name");
    openapiFields.add("name_in_regional_lang");
    openapiFields.add("age");
    openapiFields.add("relation_type");
    openapiFields.add("relation_name");
    openapiFields.add("relation_name_in_regional_lang");
    openapiFields.add("father_name");
    openapiFields.add("dob");
    openapiFields.add("gender");
    openapiFields.add("address");
    openapiFields.add("split_address");
    openapiFields.add("epic_number");
    openapiFields.add("state");
    openapiFields.add("assembly_constituency_number");
    openapiFields.add("assembly_constituency");
    openapiFields.add("parliamentary_constituency_number");
    openapiFields.add("parliamentary_constituency");
    openapiFields.add("part_number");
    openapiFields.add("part_name");
    openapiFields.add("serial_number");
    openapiFields.add("polling_station");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to VoterIdResponseSchema
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("verification_id") != null && !jsonObj.get("verification_id").isJsonNull()) && !jsonObj.get("verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verification_id").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("name_in_regional_lang") != null && !jsonObj.get("name_in_regional_lang").isJsonNull()) && !jsonObj.get("name_in_regional_lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_in_regional_lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_in_regional_lang").toString()));
      }
      if ((jsonObj.get("age") != null && !jsonObj.get("age").isJsonNull()) && !jsonObj.get("age").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `age` to be a primitive type in the JSON string but got `%s`", jsonObj.get("age").toString()));
      }
      if ((jsonObj.get("relation_type") != null && !jsonObj.get("relation_type").isJsonNull()) && !jsonObj.get("relation_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation_type").toString()));
      }
      if ((jsonObj.get("relation_name") != null && !jsonObj.get("relation_name").isJsonNull()) && !jsonObj.get("relation_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation_name").toString()));
      }
      if ((jsonObj.get("relation_name_in_regional_lang") != null && !jsonObj.get("relation_name_in_regional_lang").isJsonNull()) && !jsonObj.get("relation_name_in_regional_lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation_name_in_regional_lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation_name_in_regional_lang").toString()));
      }
      if ((jsonObj.get("father_name") != null && !jsonObj.get("father_name").isJsonNull()) && !jsonObj.get("father_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `father_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("father_name").toString()));
      }
      if ((jsonObj.get("dob") != null && !jsonObj.get("dob").isJsonNull()) && !jsonObj.get("dob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dob").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      // validate the optional field `split_address`
      if (jsonObj.get("split_address") != null && !jsonObj.get("split_address").isJsonNull()) {
        SplitAddressSchema.validateJsonElement(jsonObj.get("split_address"));
      }
      if ((jsonObj.get("epic_number") != null && !jsonObj.get("epic_number").isJsonNull()) && !jsonObj.get("epic_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `epic_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("epic_number").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("assembly_constituency_number") != null && !jsonObj.get("assembly_constituency_number").isJsonNull()) && !jsonObj.get("assembly_constituency_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assembly_constituency_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assembly_constituency_number").toString()));
      }
      if ((jsonObj.get("assembly_constituency") != null && !jsonObj.get("assembly_constituency").isJsonNull()) && !jsonObj.get("assembly_constituency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assembly_constituency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assembly_constituency").toString()));
      }
      if ((jsonObj.get("parliamentary_constituency_number") != null && !jsonObj.get("parliamentary_constituency_number").isJsonNull()) && !jsonObj.get("parliamentary_constituency_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parliamentary_constituency_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parliamentary_constituency_number").toString()));
      }
      if ((jsonObj.get("parliamentary_constituency") != null && !jsonObj.get("parliamentary_constituency").isJsonNull()) && !jsonObj.get("parliamentary_constituency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parliamentary_constituency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parliamentary_constituency").toString()));
      }
      if ((jsonObj.get("part_number") != null && !jsonObj.get("part_number").isJsonNull()) && !jsonObj.get("part_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `part_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("part_number").toString()));
      }
      if ((jsonObj.get("part_name") != null && !jsonObj.get("part_name").isJsonNull()) && !jsonObj.get("part_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `part_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("part_name").toString()));
      }
      if ((jsonObj.get("serial_number") != null && !jsonObj.get("serial_number").isJsonNull()) && !jsonObj.get("serial_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial_number").toString()));
      }
      if ((jsonObj.get("polling_station") != null && !jsonObj.get("polling_station").isJsonNull()) && !jsonObj.get("polling_station").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `polling_station` to be a primitive type in the JSON string but got `%s`", jsonObj.get("polling_station").toString()));
      }
  }


  /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to VoterIdResponseSchema
  */
  public static boolean validateJsonElementForOneOf(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("verification_id") != null && !jsonObj.get("verification_id").isJsonNull()) && !jsonObj.get("verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verification_id").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("name_in_regional_lang") != null && !jsonObj.get("name_in_regional_lang").isJsonNull()) && !jsonObj.get("name_in_regional_lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_in_regional_lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_in_regional_lang").toString()));
      }
      if ((jsonObj.get("age") != null && !jsonObj.get("age").isJsonNull()) && !jsonObj.get("age").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `age` to be a primitive type in the JSON string but got `%s`", jsonObj.get("age").toString()));
      }
      if ((jsonObj.get("relation_type") != null && !jsonObj.get("relation_type").isJsonNull()) && !jsonObj.get("relation_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation_type").toString()));
      }
      if ((jsonObj.get("relation_name") != null && !jsonObj.get("relation_name").isJsonNull()) && !jsonObj.get("relation_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation_name").toString()));
      }
      if ((jsonObj.get("relation_name_in_regional_lang") != null && !jsonObj.get("relation_name_in_regional_lang").isJsonNull()) && !jsonObj.get("relation_name_in_regional_lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation_name_in_regional_lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation_name_in_regional_lang").toString()));
      }
      if ((jsonObj.get("father_name") != null && !jsonObj.get("father_name").isJsonNull()) && !jsonObj.get("father_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `father_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("father_name").toString()));
      }
      if ((jsonObj.get("dob") != null && !jsonObj.get("dob").isJsonNull()) && !jsonObj.get("dob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dob").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      // validate the optional field `split_address`
      if (jsonObj.get("split_address") != null && !jsonObj.get("split_address").isJsonNull()) {
        SplitAddressSchema.validateJsonElement(jsonObj.get("split_address"));
        return true;
      }
      if ((jsonObj.get("epic_number") != null && !jsonObj.get("epic_number").isJsonNull()) && !jsonObj.get("epic_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `epic_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("epic_number").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("assembly_constituency_number") != null && !jsonObj.get("assembly_constituency_number").isJsonNull()) && !jsonObj.get("assembly_constituency_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assembly_constituency_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assembly_constituency_number").toString()));
      }
      if ((jsonObj.get("assembly_constituency") != null && !jsonObj.get("assembly_constituency").isJsonNull()) && !jsonObj.get("assembly_constituency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assembly_constituency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assembly_constituency").toString()));
      }
      if ((jsonObj.get("parliamentary_constituency_number") != null && !jsonObj.get("parliamentary_constituency_number").isJsonNull()) && !jsonObj.get("parliamentary_constituency_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parliamentary_constituency_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parliamentary_constituency_number").toString()));
      }
      if ((jsonObj.get("parliamentary_constituency") != null && !jsonObj.get("parliamentary_constituency").isJsonNull()) && !jsonObj.get("parliamentary_constituency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parliamentary_constituency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parliamentary_constituency").toString()));
      }
      if ((jsonObj.get("part_number") != null && !jsonObj.get("part_number").isJsonNull()) && !jsonObj.get("part_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `part_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("part_number").toString()));
      }
      if ((jsonObj.get("part_name") != null && !jsonObj.get("part_name").isJsonNull()) && !jsonObj.get("part_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `part_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("part_name").toString()));
      }
      if ((jsonObj.get("serial_number") != null && !jsonObj.get("serial_number").isJsonNull()) && !jsonObj.get("serial_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial_number").toString()));
      }
      if ((jsonObj.get("polling_station") != null && !jsonObj.get("polling_station").isJsonNull()) && !jsonObj.get("polling_station").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `polling_station` to be a primitive type in the JSON string but got `%s`", jsonObj.get("polling_station").toString()));
      }
      return false;
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoterIdResponseSchema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoterIdResponseSchema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoterIdResponseSchema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoterIdResponseSchema.class));

       return (TypeAdapter<T>) new TypeAdapter<VoterIdResponseSchema>() {
           @Override
           public void write(JsonWriter out, VoterIdResponseSchema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VoterIdResponseSchema read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VoterIdResponseSchema given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VoterIdResponseSchema
  * @throws IOException if the JSON string is invalid with respect to VoterIdResponseSchema
  */
  public static VoterIdResponseSchema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoterIdResponseSchema.class);
  }

 /**
  * Convert an instance of VoterIdResponseSchema to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


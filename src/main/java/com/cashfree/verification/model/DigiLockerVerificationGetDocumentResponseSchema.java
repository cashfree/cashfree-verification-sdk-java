/*
 * Cashfree Verification API's.
 * Cashfree's Verification APIs provide different types of verification to our merchants.
 *
 * The version of the OpenAPI document: 2023-12-18
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.verification.model;

import java.util.Objects;
import com.cashfree.verification.model.DigiLockerVerificationGetDocumentResponseSchemaSplitAddress;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cashfree.verification.JSON;

/**
 * Success response for Get DigiLocker Document API
 */
@Schema(description = "Success response for Get DigiLocker Document API")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-20T10:11:49.428720Z[Etc/UTC]")
public class DigiLockerVerificationGetDocumentResponseSchema {
  public static final String SERIALIZED_NAME_CARE_OF = "care_of";
  @SerializedName(SERIALIZED_NAME_CARE_OF)
  private String careOf;

  public static final String SERIALIZED_NAME_DOB = "dob";
  @SerializedName(SERIALIZED_NAME_DOB)
  private String dob;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHOTO_LINK = "photo_link";
  @SerializedName(SERIALIZED_NAME_PHOTO_LINK)
  private String photoLink;

  public static final String SERIALIZED_NAME_REFERENCE_ID = "reference_id";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private Integer referenceId;

  public static final String SERIALIZED_NAME_SPLIT_ADDRESS = "split_address";
  @SerializedName(SERIALIZED_NAME_SPLIT_ADDRESS)
  private DigiLockerVerificationGetDocumentResponseSchemaSplitAddress splitAddress;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_VERIFICATION_ID = "verification_id";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_ID)
  private String verificationId;

  public DigiLockerVerificationGetDocumentResponseSchema() {
  }

  public DigiLockerVerificationGetDocumentResponseSchema careOf(String careOf) {
    
    this.careOf = careOf;
    return this;
  }

   /**
   * It displays the name of the parent or guardian.
   * @return careOf
  **/
  @javax.annotation.Nullable
  @Schema(example = "John Snow", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the parent or guardian.")
  public String getCareOf() {
    return careOf;
  }


  public void setCareOf(String careOf) {
    this.careOf = careOf;
  }


  public DigiLockerVerificationGetDocumentResponseSchema dob(String dob) {
    
    this.dob = dob;
    return this;
  }

   /**
   * It displays the date of birth of the individual.
   * @return dob
  **/
  @javax.annotation.Nullable
  @Schema(example = "02-02-1995", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the date of birth of the individual.")
  public String getDob() {
    return dob;
  }


  public void setDob(String dob) {
    this.dob = dob;
  }


  public DigiLockerVerificationGetDocumentResponseSchema gender(String gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * It displays the gender of the individual.
   * @return gender
  **/
  @javax.annotation.Nullable
  @Schema(example = "M", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the gender of the individual.")
  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    this.gender = gender;
  }


  public DigiLockerVerificationGetDocumentResponseSchema name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * It displays the name of the individual.
   * @return name
  **/
  @javax.annotation.Nullable
  @Schema(example = "John Doe", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the individual.")
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DigiLockerVerificationGetDocumentResponseSchema photoLink(String photoLink) {
    
    this.photoLink = photoLink;
    return this;
  }

   /**
   * It displays the link to the photo of the individual present in the document.
   * @return photoLink
  **/
  @javax.annotation.Nullable
  @Schema(example = "PHOTO_LINK", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the link to the photo of the individual present in the document.")
  public String getPhotoLink() {
    return photoLink;
  }


  public void setPhotoLink(String photoLink) {
    this.photoLink = photoLink;
  }


  public DigiLockerVerificationGetDocumentResponseSchema referenceId(Integer referenceId) {
    
    this.referenceId = referenceId;
    return this;
  }

   /**
   * It displays the unique ID created by Cashfree Payments for reference purposes.
   * @return referenceId
  **/
  @javax.annotation.Nullable
  @Schema(example = "1234", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID created by Cashfree Payments for reference purposes.")
  public Integer getReferenceId() {
    return referenceId;
  }


  public void setReferenceId(Integer referenceId) {
    this.referenceId = referenceId;
  }


  public DigiLockerVerificationGetDocumentResponseSchema splitAddress(DigiLockerVerificationGetDocumentResponseSchemaSplitAddress splitAddress) {
    
    this.splitAddress = splitAddress;
    return this;
  }

   /**
   * Get splitAddress
   * @return splitAddress
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  public DigiLockerVerificationGetDocumentResponseSchemaSplitAddress getSplitAddress() {
    return splitAddress;
  }


  public void setSplitAddress(DigiLockerVerificationGetDocumentResponseSchemaSplitAddress splitAddress) {
    this.splitAddress = splitAddress;
  }


  public DigiLockerVerificationGetDocumentResponseSchema uid(String uid) {
    
    this.uid = uid;
    return this;
  }

   /**
   * It displays the unique number assigned to the individual when applying for the aadhaar card.]
   * @return uid
  **/
  @javax.annotation.Nullable
  @Schema(example = "xxxxxxxx5678", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique number assigned to the individual when applying for the aadhaar card.]")
  public String getUid() {
    return uid;
  }


  public void setUid(String uid) {
    this.uid = uid;
  }


  public DigiLockerVerificationGetDocumentResponseSchema verificationId(String verificationId) {
    
    this.verificationId = verificationId;
    return this;
  }

   /**
   * It displays the unique ID you created to identify the verification request.
   * @return verificationId
  **/
  @javax.annotation.Nullable
  @Schema(example = "ABC00123", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the unique ID you created to identify the verification request.")
  public String getVerificationId() {
    return verificationId;
  }


  public void setVerificationId(String verificationId) {
    this.verificationId = verificationId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DigiLockerVerificationGetDocumentResponseSchema digiLockerVerificationGetDocumentResponseSchema = (DigiLockerVerificationGetDocumentResponseSchema) o;
    return Objects.equals(this.careOf, digiLockerVerificationGetDocumentResponseSchema.careOf) &&
        Objects.equals(this.dob, digiLockerVerificationGetDocumentResponseSchema.dob) &&
        Objects.equals(this.gender, digiLockerVerificationGetDocumentResponseSchema.gender) &&
        Objects.equals(this.name, digiLockerVerificationGetDocumentResponseSchema.name) &&
        Objects.equals(this.photoLink, digiLockerVerificationGetDocumentResponseSchema.photoLink) &&
        Objects.equals(this.referenceId, digiLockerVerificationGetDocumentResponseSchema.referenceId) &&
        Objects.equals(this.splitAddress, digiLockerVerificationGetDocumentResponseSchema.splitAddress) &&
        Objects.equals(this.uid, digiLockerVerificationGetDocumentResponseSchema.uid) &&
        Objects.equals(this.verificationId, digiLockerVerificationGetDocumentResponseSchema.verificationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(careOf, dob, gender, name, photoLink, referenceId, splitAddress, uid, verificationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DigiLockerVerificationGetDocumentResponseSchema {\n");
    sb.append("    careOf: ").append(toIndentedString(careOf)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    photoLink: ").append(toIndentedString(photoLink)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    splitAddress: ").append(toIndentedString(splitAddress)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    verificationId: ").append(toIndentedString(verificationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("care_of");
    openapiFields.add("dob");
    openapiFields.add("gender");
    openapiFields.add("name");
    openapiFields.add("photo_link");
    openapiFields.add("reference_id");
    openapiFields.add("split_address");
    openapiFields.add("uid");
    openapiFields.add("verification_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to DigiLockerVerificationGetDocumentResponseSchema
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("care_of") != null && !jsonObj.get("care_of").isJsonNull()) && !jsonObj.get("care_of").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `care_of` to be a primitive type in the JSON string but got `%s`", jsonObj.get("care_of").toString()));
      }
      if ((jsonObj.get("dob") != null && !jsonObj.get("dob").isJsonNull()) && !jsonObj.get("dob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dob").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("photo_link") != null && !jsonObj.get("photo_link").isJsonNull()) && !jsonObj.get("photo_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `photo_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("photo_link").toString()));
      }
      // validate the optional field `split_address`
      if (jsonObj.get("split_address") != null && !jsonObj.get("split_address").isJsonNull()) {
        DigiLockerVerificationGetDocumentResponseSchemaSplitAddress.validateJsonElement(jsonObj.get("split_address"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("verification_id") != null && !jsonObj.get("verification_id").isJsonNull()) && !jsonObj.get("verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verification_id").toString()));
      }
  }


  /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to DigiLockerVerificationGetDocumentResponseSchema
  */
  public static boolean validateJsonElementForOneOf(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("care_of") != null && !jsonObj.get("care_of").isJsonNull()) && !jsonObj.get("care_of").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `care_of` to be a primitive type in the JSON string but got `%s`", jsonObj.get("care_of").toString()));
      }
      if ((jsonObj.get("dob") != null && !jsonObj.get("dob").isJsonNull()) && !jsonObj.get("dob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dob").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("photo_link") != null && !jsonObj.get("photo_link").isJsonNull()) && !jsonObj.get("photo_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `photo_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("photo_link").toString()));
      }
      // validate the optional field `split_address`
      if (jsonObj.get("split_address") != null && !jsonObj.get("split_address").isJsonNull()) {
        DigiLockerVerificationGetDocumentResponseSchemaSplitAddress.validateJsonElement(jsonObj.get("split_address"));
        return true;
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("verification_id") != null && !jsonObj.get("verification_id").isJsonNull()) && !jsonObj.get("verification_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verification_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verification_id").toString()));
      }
      return false;
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DigiLockerVerificationGetDocumentResponseSchema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DigiLockerVerificationGetDocumentResponseSchema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DigiLockerVerificationGetDocumentResponseSchema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DigiLockerVerificationGetDocumentResponseSchema.class));

       return (TypeAdapter<T>) new TypeAdapter<DigiLockerVerificationGetDocumentResponseSchema>() {
           @Override
           public void write(JsonWriter out, DigiLockerVerificationGetDocumentResponseSchema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DigiLockerVerificationGetDocumentResponseSchema read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DigiLockerVerificationGetDocumentResponseSchema given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DigiLockerVerificationGetDocumentResponseSchema
  * @throws IOException if the JSON string is invalid with respect to DigiLockerVerificationGetDocumentResponseSchema
  */
  public static DigiLockerVerificationGetDocumentResponseSchema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DigiLockerVerificationGetDocumentResponseSchema.class);
  }

 /**
  * Convert an instance of DigiLockerVerificationGetDocumentResponseSchema to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * Cashfree Verification API's.
 * Cashfree's Verification APIs provide different types of verification to our merchants.
 *
 * The version of the OpenAPI document: 2023-12-18
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cashfree.verification.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cashfree.verification.JSON;

/**
 * It contains additional information of the individual.
 */
@Schema(description = "It contains additional information of the individual.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-20T10:11:49.428720Z[Etc/UTC]")
public class AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails {
  public static final String SERIALIZED_NAME_AADHAAR = "aadhaar";
  @SerializedName(SERIALIZED_NAME_AADHAAR)
  private String aadhaar;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PAN = "pan";
  @SerializedName(SERIALIZED_NAME_PAN)
  private String pan;

  public static final String SERIALIZED_NAME_IFSC = "ifsc";
  @SerializedName(SERIALIZED_NAME_IFSC)
  private String ifsc;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT = "bank_account";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT)
  private String bankAccount;

  public static final String SERIALIZED_NAME_BANK_ADDRESS = "bank_address";
  @SerializedName(SERIALIZED_NAME_BANK_ADDRESS)
  private String bankAddress;

  public static final String SERIALIZED_NAME_RELATION = "relation";
  @SerializedName(SERIALIZED_NAME_RELATION)
  private String relation;

  public static final String SERIALIZED_NAME_RELATIVE_NAME = "relative_name";
  @SerializedName(SERIALIZED_NAME_RELATIVE_NAME)
  private String relativeName;

  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails() {
  }

  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails aadhaar(String aadhaar) {
    
    this.aadhaar = aadhaar;
    return this;
  }

   /**
   * It displays the aadhaar information of the individual.
   * @return aadhaar
  **/
  @javax.annotation.Nullable
  @Schema(example = "XXXXXXXX7561", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the aadhaar information of the individual.")
  public String getAadhaar() {
    return aadhaar;
  }


  public void setAadhaar(String aadhaar) {
    this.aadhaar = aadhaar;
  }


  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * It displays the email address of the individual.
   * @return email
  **/
  @javax.annotation.Nullable
  @Schema(example = "johndoe@gmail.com", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the email address of the individual.")
  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails pan(String pan) {
    
    this.pan = pan;
    return this;
  }

   /**
   * It displays the PAN information of the individual.
   * @return pan
  **/
  @javax.annotation.Nullable
  @Schema(example = "ABCDE5930G", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the PAN information of the individual.")
  public String getPan() {
    return pan;
  }


  public void setPan(String pan) {
    this.pan = pan;
  }


  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails ifsc(String ifsc) {
    
    this.ifsc = ifsc;
    return this;
  }

   /**
   * It displays the IFSC information of the individual&#39;s bank account.
   * @return ifsc
  **/
  @javax.annotation.Nullable
  @Schema(example = "SBIN0012345", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the IFSC information of the individual's bank account.")
  public String getIfsc() {
    return ifsc;
  }


  public void setIfsc(String ifsc) {
    this.ifsc = ifsc;
  }


  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails bankAccount(String bankAccount) {
    
    this.bankAccount = bankAccount;
    return this;
  }

   /**
   * It displays the bank account number of the individual.
   * @return bankAccount
  **/
  @javax.annotation.Nullable
  @Schema(example = "20329012345", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the bank account number of the individual.")
  public String getBankAccount() {
    return bankAccount;
  }


  public void setBankAccount(String bankAccount) {
    this.bankAccount = bankAccount;
  }


  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails bankAddress(String bankAddress) {
    
    this.bankAddress = bankAddress;
    return this;
  }

   /**
   * It displays the address of the bank.
   * @return bankAddress
  **/
  @javax.annotation.Nullable
  @Schema(example = "STATE BANK OF INDIA,KATANGA  BENGALURU", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the address of the bank.")
  public String getBankAddress() {
    return bankAddress;
  }


  public void setBankAddress(String bankAddress) {
    this.bankAddress = bankAddress;
  }


  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails relation(String relation) {
    
    this.relation = relation;
    return this;
  }

   /**
   * It displays the realtionship of the individual with the relative.
   * @return relation
  **/
  @javax.annotation.Nullable
  @Schema(example = "F", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the realtionship of the individual with the relative.")
  public String getRelation() {
    return relation;
  }


  public void setRelation(String relation) {
    this.relation = relation;
  }


  public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails relativeName(String relativeName) {
    
    this.relativeName = relativeName;
    return this;
  }

   /**
   * It displays the name of the relative.
   * @return relativeName
  **/
  @javax.annotation.Nullable
  @Schema(example = "Alice Doe", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "It displays the name of the relative.")
  public String getRelativeName() {
    return relativeName;
  }


  public void setRelativeName(String relativeName) {
    this.relativeName = relativeName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails advanceEmploymentResponseUanDetailsInnerAdditionalDetails = (AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails) o;
    return Objects.equals(this.aadhaar, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.aadhaar) &&
        Objects.equals(this.email, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.email) &&
        Objects.equals(this.pan, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.pan) &&
        Objects.equals(this.ifsc, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.ifsc) &&
        Objects.equals(this.bankAccount, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.bankAccount) &&
        Objects.equals(this.bankAddress, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.bankAddress) &&
        Objects.equals(this.relation, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.relation) &&
        Objects.equals(this.relativeName, advanceEmploymentResponseUanDetailsInnerAdditionalDetails.relativeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aadhaar, email, pan, ifsc, bankAccount, bankAddress, relation, relativeName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails {\n");
    sb.append("    aadhaar: ").append(toIndentedString(aadhaar)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    pan: ").append(toIndentedString(pan)).append("\n");
    sb.append("    ifsc: ").append(toIndentedString(ifsc)).append("\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    bankAddress: ").append(toIndentedString(bankAddress)).append("\n");
    sb.append("    relation: ").append(toIndentedString(relation)).append("\n");
    sb.append("    relativeName: ").append(toIndentedString(relativeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aadhaar");
    openapiFields.add("email");
    openapiFields.add("pan");
    openapiFields.add("ifsc");
    openapiFields.add("bank_account");
    openapiFields.add("bank_address");
    openapiFields.add("relation");
    openapiFields.add("relative_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aadhaar") != null && !jsonObj.get("aadhaar").isJsonNull()) && !jsonObj.get("aadhaar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadhaar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadhaar").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("pan") != null && !jsonObj.get("pan").isJsonNull()) && !jsonObj.get("pan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pan").toString()));
      }
      if ((jsonObj.get("ifsc") != null && !jsonObj.get("ifsc").isJsonNull()) && !jsonObj.get("ifsc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ifsc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ifsc").toString()));
      }
      if ((jsonObj.get("bank_account") != null && !jsonObj.get("bank_account").isJsonNull()) && !jsonObj.get("bank_account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bank_account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bank_account").toString()));
      }
      if ((jsonObj.get("bank_address") != null && !jsonObj.get("bank_address").isJsonNull()) && !jsonObj.get("bank_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bank_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bank_address").toString()));
      }
      if ((jsonObj.get("relation") != null && !jsonObj.get("relation").isJsonNull()) && !jsonObj.get("relation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation").toString()));
      }
      if ((jsonObj.get("relative_name") != null && !jsonObj.get("relative_name").isJsonNull()) && !jsonObj.get("relative_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relative_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relative_name").toString()));
      }
  }


  /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails
  */
  public static boolean validateJsonElementForOneOf(JsonElement jsonElement) throws IOException {

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aadhaar") != null && !jsonObj.get("aadhaar").isJsonNull()) && !jsonObj.get("aadhaar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aadhaar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aadhaar").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("pan") != null && !jsonObj.get("pan").isJsonNull()) && !jsonObj.get("pan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pan").toString()));
      }
      if ((jsonObj.get("ifsc") != null && !jsonObj.get("ifsc").isJsonNull()) && !jsonObj.get("ifsc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ifsc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ifsc").toString()));
      }
      if ((jsonObj.get("bank_account") != null && !jsonObj.get("bank_account").isJsonNull()) && !jsonObj.get("bank_account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bank_account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bank_account").toString()));
      }
      if ((jsonObj.get("bank_address") != null && !jsonObj.get("bank_address").isJsonNull()) && !jsonObj.get("bank_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bank_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bank_address").toString()));
      }
      if ((jsonObj.get("relation") != null && !jsonObj.get("relation").isJsonNull()) && !jsonObj.get("relation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relation").toString()));
      }
      if ((jsonObj.get("relative_name") != null && !jsonObj.get("relative_name").isJsonNull()) && !jsonObj.get("relative_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relative_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relative_name").toString()));
      }
      return false;
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails>() {
           @Override
           public void write(JsonWriter out, AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails
  * @throws IOException if the JSON string is invalid with respect to AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails
  */
  public static AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails.class);
  }

 /**
  * Convert an instance of AdvanceEmploymentResponseUanDetailsInnerAdditionalDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

